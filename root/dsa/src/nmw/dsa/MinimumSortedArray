public class MinimumSortedArray {

    public static void main(String[] args) {

//        int[] input = new int[]{4,5,6,7,0,1,2};
//                int[] input = new int[]{11,13,15,17};

//        int[] input = new int[]{4,5,1,2,3};
//        int[] input = new int[]{5,1,2,3,4};
        int[] input = new int[]{2, 2, 2, 0, 1};
        System.out.println(findMin(input));
    }

    public static int tempo(int[] nums) {

        int head = 0, tail = nums.length - 1, min = Integer.MAX_VALUE;

        for (int i = 0; i < nums.length; i++) {

            if (nums[tail] < nums[head]) {

                if (min > nums[tail]) {
                    min = nums[tail];
                    tail--;
                }
            } else {


            }
        }

        return 0;
    }

    public static int findMin(int[] nums) {

        int len = nums.length - 1, index;
        boolean isForward = true;

        if (len == 0) {
            return nums[0];
        }

        if (nums[0] <= nums[len / 2]) {
            index = 0;
        } else {
            index = len / 2;
        }

        if (nums[len] < nums[index]) {
            index = len;
            isForward = false;
        }

        if (isForward) {

            for (int i = 0; i < len; i++) {
                if (nums[i] > nums[i + 1]) {
                    return nums[i + 1];
                }
            }
        } else {

            for (int i = len; i > 0; i--) {
                if (nums[i] < nums[i - 1]) {
                    return nums[i];
                }
            }
        }

        return nums[0];
    }
}
